<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.online.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="com.online.model.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="scheduling_id" property="schedulingId" jdbcType="INTEGER" />
    <result column="book_time" property="bookTime" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, scheduling_id, book_time, state, price
  </sql>
  <resultMap type="com.online.bean.BookResultBean" id="BookMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="scheduling_id" property="schedulingId" jdbcType="INTEGER" />
    <result column="book_time" property="bookTime" jdbcType="DATE" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="doctor_id" property="doctorId" />
    <result column="doctor_name" property="doctorName"/>
    <result column="date" property="date"/>
  </resultMap>
  
  <select id="selectByUserId" resultMap="BookMap">
  select *
from (
(select * from book where user_id = #{userId}) as a
natural join
(select id as scheduling_id,doctor_id ,date from scheduling) as b
natural join 
( select id as doctor_id,name as doctor_name from doctor)as c
)
  </select>
  <select id="selectNumberOfScheduling" resultType="java.lang.Integer">
  select count(*)
  from book
  where scheduling_id = #{schedulingId}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.online.model.Book" >
    insert into book (id, user_id, scheduling_id, 
      book_time, state, price
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{schedulingId,jdbcType=INTEGER}, 
      #{bookTime,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.online.model.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="schedulingId != null" >
        scheduling_id,
      </if>
      <if test="bookTime != null" >
        book_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="price != null" >
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="schedulingId != null" >
        #{schedulingId,jdbcType=INTEGER},
      </if>
      <if test="bookTime != null" >
        #{bookTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.online.model.Book" >
    update book
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="schedulingId != null" >
        scheduling_id = #{schedulingId,jdbcType=INTEGER},
      </if>
      <if test="bookTime != null" >
        book_time = #{bookTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.online.model.Book" >
    update book
    set user_id = #{userId,jdbcType=INTEGER},
      scheduling_id = #{schedulingId,jdbcType=INTEGER},
      book_time = #{bookTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>